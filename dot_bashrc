# /etc/skel/.bashrc
#
# This file is sourced by all *interactive* bash shells on startup,
# including some apparently interactive shells such as scp and rcp
# that can't tolerate any output.  So make sure this doesn't display
# anything or bad things will happen !


# Test for an interactive shell.  There is no need to set anything
# past this point for scp and rcp, and it's important to refrain from
# outputting anything in those cases.
if [[ $- != *i* ]] ; then
	# Shell is non-interactive.  Be done now!
	return
fi


# Put your fun stuff here.
# .bashrc

# User specific aliases and functions
alias rm='rm -rvf'
alias ll='ls -laF'
alias cp='cp -rf'
alias mv='mv -i'
alias vd='vimdiff -S ~/.vim/colors/torte.vim'
alias vi='vim'
alias g='vim -t'
alias gl='git log --pretty="%h - %s" --no-merges'
alias glp='git log -p --no-merges'
alias gw='git whatchanged --oneline'
alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gb='git branch'
alias gch='git checkout HEAD'
alias gp='grep --colour=auto --exclude=tags --exclude-dir=*.git --exclude=*.swp'
alias tm='tmux attach-session -t zeroway'
alias adbs='adb shell'
alias adbr='adb root && adb wait-for-device && adb remount && adb shell mount -o remount rw /'
alias minicom='sudo minicom'

# Source global definitions
if [ -f /etc/bashrc ]; then
. /etc/bashrc
fi

#source /etc/bash_completion.d/git-completion.bash

#git branch show in the shell prompt
find_git_branch () {
	local dir=. head

	until [ "$dir" -ef / ]; do
		if [ -f "$dir/.git/HEAD" ]; then
			head=$(< "$dir/.git/HEAD")

			if [[ $head = ref:\ refs/heads/* ]]; then
				git_branch=" (${head#*/*/})"
			elif [[ $head != '' ]]; then
				git_branch=" ((detached))"
			else
				git_branch=" ((unknow))"
			fi

			return
		fi

		dir="../$dir"
	done

	git_branch=''
}

PROMPT_COMMAND="find_git_branch"

# Here is bash color codes you can use
black=$'\[\e[1;30m\]'
red=$'\[\e[1;31m\]'
green=$'\[\e[1;32m\]'
yellow=$'\[\e[1;33m\]'
blue=$'\[\e[1;34m\]'
magenta=$'\[\e[1;35m\]'
cyan=$'\[\e[1;36m\]'
white=$'\[\e[1;37m\]'
normal=$'\[\e[m\]'

#PS1="$white[$magenta\u$white@$green\h$white:$cyan\w$yellow\$git_branch$white]\$ $normal"
PS1="$red[\W$yellow\$git_branch$red]$ $normal"
complete -cf sudo

# for firefly-rk3399
export PATH=$PATH:/home/zeroway/rk3399/tool/gcc-linaro-4.9.4-2017.01-i686_aarch64-linux-gnu/bin

# openJDK7 for android 5.1
JAVA_HOME=/opt/java-7-openjdk-amd64/
export JRE_HOME=/opt/java-7-openjdk-amd64/bin/jre
export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH

# openJDK8
#JAVA_HOME=/opt/java-8-openjdk-amd64/
#export JRE_HOME=/opt/java-8-openjdk-amd64/bin/jre
#export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
#export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH

# oracle JDK for android studio
#JAVA_HOME=/opt/jdk1.8.0_77
#export JRE_HOME=/opt/jdk1.8.0_77/bin/jre
#export CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATH
#export PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATH

# add for mytools
export PATH=$PATH:/home/zeroway/Tools

# add for android studio
export PATH=$PATH:/home/zeroway/android-studio/bin:/opt/android-sdk-linux/platform-tools

# make normal user can excute the sbin tools
export PATH=$PATH:/sbin:/usr/sbin

export EDITOR=/usr/bin/vim
